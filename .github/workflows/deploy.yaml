      # The name of the workflow
name: infra deploy

on:
  push:
    branches:
     - main
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName $EC2_HOST
              User $EC2_USERNAME
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF
      - name: docker download
        run: |
          # download docker and copy docker compose files to EC2
          scp docker_download.sh ec2:/home/${{ secrets.EC2_USERNAME }}/
          ssh ec2 "bash /home/${{ secrets.EC2_USERNAME }}/docker_download.sh"

      - name: nginx container deploy
        run: |
          scp -r Nginx ec2:/home/${{ secrets.EC2_USERNAME }}/
          cd /home/${{ secrets.EC2_USERNAME }}/Nginx/
          pwd
          ssh ec2 'bash -s' <<EOF
          export APP_CERT="${{ secrets.APP_CERT }}"
          export APP_KEY="${{ secrets.APP_KEY }}"
          export APP_DEV_CERT="${{ secrets.APP_DEV_CERT }}"
          export APP_DEV_KEY="${{ secrets.APP_DEV_KEY }}"
          bash deploy.sh
          
      - name: Monitoring containers deploy
        run: |
          scp -r Monitoring ec2:/home/${{ secrets.EC2_USERNAME }}/
          ssh ec2 "bash /home/${{ secrets.EC2_USERNAME }}/Monitoring/deploy.sh"
